package za.co.nemesisnet.portfolioforgebackend.exception;


import lombok.Getter; // Import Lombok Getter
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;

@Getter // Lombok annotation to generate getters for fields
@ResponseStatus(value = HttpStatus.NOT_FOUND) // Sets the default HTTP status for this exception
public class ResourceNotFoundException extends RuntimeException {

    private static final long serialVersionUID = 1L; // Standard practice for Serializable classes

    private final String resourceName;
    private final String fieldName;
    private final Object fieldValue; // Field value can be Long, String, etc.

    public ResourceNotFoundException(String resourceName, String fieldName, Object fieldValue) {
        // Construct the error message
        super(String.format("%s not found with %s : '%s'", resourceName, fieldName, fieldValue));
        this.resourceName = resourceName;
        this.fieldName = fieldName;
        this.fieldValue = fieldValue;
    }

    // Constructor for simple message when field/value isn't applicable or needed
    public ResourceNotFoundException(String message) {
        super(message);
        // Set default or null values for fields if needed, or add more constructors
        this.resourceName = null;
        this.fieldName = null;
        this.fieldValue = null;
    }

    // Getters are generated by Lombok's @Getter annotation
    // public String getResourceName() { return resourceName; }
    // public String getFieldName() { return fieldName; }
    // public Object getFieldValue() { return fieldValue; }
}
